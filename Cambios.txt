diff --git a/Cambios.txt b/Cambios.txt
index 9bc02f0..e69de29 100644
--- a/Cambios.txt
+++ b/Cambios.txt
@@ -1,35 +0,0 @@
-Cambios realizados a los archivos.
-
-
-En la clase esqueleto:
-
-Linea 5 --> Ahora se llama Esqueleto.
-
-
-En la clase IniciarSesionForm:
-
-Linea 35  --> Ahora es un JPasswordTextField.
-Linea 74  --> Inicializa un JPasswordTextField en vez de un JTextField.
-Linea 111 --> Se obtiene el valor por medio de new String(txtClave.getPassword()), ya
-              que si utilizo txtClave.getText() muestra este mensaje:
-
-              Note: Esqueleto.java uses or overrides a deprecated API.
-              Note: Recompile with -Xlint:deprecation for details.
-              
-              No se si ustedes conocen otra forma. Lo pueden cambiar...
-
-En la misma linea --> La funcion se llama ahora IniciarSesion().
-
-
-En la clase Controladora:
-
-Linea 13 --> La funcion se llama ahora IniciarSesion().
-
-
-En la clase MainWindow:
-
-Linea 26 --> La constante ahora tiene el valor de "evaluarRepresentante".
-Linea 84 --> El boton ahora se llama "Evaluar Representante".
-
-
-
diff --git a/data/Thumbs.db b/data/Thumbs.db
index f011a1d..b0a7cfd 100644
Binary files a/data/Thumbs.db and b/data/Thumbs.db differ
diff --git a/src/DataAccess/DBManager.java b/src/DataAccess/DBManager.java
index bee4080..94b6c77 100644
--- a/src/DataAccess/DBManager.java
+++ b/src/DataAccess/DBManager.java
@@ -19,7 +19,7 @@ public class DBManager {
 	private String driver = "com.mysql.jdbc.Driver";
 	private String url = "jdbc:mysql://localhost:3306/ecs";
 	private String user = "root";
-	private String pwd = "mysql";
+	private String pwd = "aneudylab";
 
 	private DBManager() {
 		if (connection == null) {
diff --git a/src/DataAccess/UsuarioDA.java b/src/DataAccess/UsuarioDA.java
index b411a7e..582b01e 100644
--- a/src/DataAccess/UsuarioDA.java
+++ b/src/DataAccess/UsuarioDA.java
@@ -10,7 +10,7 @@ public class UsuarioDA {
 	public UsuarioDA() {
 	}
 
-	public boolean leerUsuario(Usuario usu) {
+	public void leerUsuario(Usuario usu) {
 
 		Connection con = DBManager.openDBConnection();
 		String usuario = usu.getNombreUsuario();
@@ -18,29 +18,29 @@ public class UsuarioDA {
 		
 		// creando mi query de verificacion
 		
-		String SQLquery = "SELECT NOMBRE_USUARIO, CLAVE FROM USUARIO WHERE NOMBRE_USUARIO='"
-				+ usuario + "' And CLAVE='" + clave + "'";
+        String SQLquery = "SELECT id_usuario, nombre, r.descripcion rol "+
+                          " FROM usuario u, rol r " + 
+                          "WHERE u.id_rol = r.id_rol AND nombre_usuario='"+ usuario + "' And CLAVE='" + clave + "'";
 				
 		try {
 
 			Statement stmt = con.createStatement();
 			ResultSet result = stmt.executeQuery(SQLquery);
 
-		// verificando si el usuario existe
+		// verificando si el usuario existe, Si no el id se mantienen en 0
 			
 			if (result.next()) {
-				return true;
-			} else {
-				return false;
+                usu.setID(result.getInt("id_usuario"));
+                usu.setNombre(result.getString("nombre"));
+                usu.setRol(result.getString("rol"));
 			}
 		}
 		
 		// Manejo de excepcion
+        // TODo: Que jairis la maneje bien
 		
 		catch (Exception err) {
 			System.out.println("Error: " + err.getMessage());
-			return false;
 		}
-
 	}
-}
\ No newline at end of file
+}
diff --git a/src/domain/ControladorSesion.java b/src/domain/ControladorSesion.java
index 9692a51..062b749 100644
--- a/src/domain/ControladorSesion.java
+++ b/src/domain/ControladorSesion.java
@@ -7,39 +7,21 @@ import view.MainWindow;
 
 public class ControladorSesion {
 
+    public static Usuario usuarioActual;
 	private String nombre = "";
 	private String clave = "";
 
 	public void iniciarSesion(String nombreUsuario, String Clave) {
 
-		Usuario usuario = new Usuario(nombreUsuario, Clave);
+        Usuario usu = new Usuario(nombreUsuario, Clave);
 		UsuarioDA usuarioDA = new UsuarioDA();
+        usuarioDA.leerUsuario(usu);
 
-		if (usuarioDA.leerUsuario(usuario) == true) {
-			MainWindow m = new MainWindow(usuario.getNombreUsuario());
+        if(usu.getID() != 0){
+            ControladorSesion.usuarioActual = usu;
+			MainWindow m = new MainWindow(usu.getNombre());
 			m.setVisible(true);
-		} else {
-
-			JOptionPane.showMessageDialog(null, "Clave o Password incorrecto,",
-					"Error de acceso", JOptionPane.ERROR_MESSAGE);
 		}
 	}
 
-	// -----------------------------------------------------------------
-	// Setters y Getters
-	// -----------------------------------------------------------------
-
-	public String getNombre() {
-		return nombre;
-	}
-	public String getClave() {
-		return clave;
-	}
-	public void setNombre(String nombre) {
-		this.nombre = nombre;
-	}
-	public void setClave(String clave) {
-		this.clave = clave;
-	}
-
 }
diff --git a/src/domain/Usuario.java b/src/domain/Usuario.java
index 3da61a7..4799a2c 100644
--- a/src/domain/Usuario.java
+++ b/src/domain/Usuario.java
@@ -34,7 +34,7 @@ public class Usuario {
 	// Setters y Getters
 	// -----------------------------------------------------------------
 
-	public int getUsuarioID() {
+	public int getID() {
 		return usuarioID;
 	}
 
@@ -50,24 +50,15 @@ public class Usuario {
 		return nombre;
 	}
 
- 
 	public String getRol() {
 		return rol;
 	}
 
 	
-	public void setUsuarioID(int usuarioID) {
+	public void setID(int usuarioID) {
 		this.usuarioID = usuarioID;
 	}
 
-	public void setNombreUsuario(String nombreUsuario) {
-		this.nombreUsuario = nombreUsuario;
-	}
-
-	public void setClave(String clave) {
-		this.clave = clave;
-	}
-
 	public void setNombre(String nombre) {
 		this.nombre = nombre;
 	}
diff --git a/src/view/IniciarSesionForm.java b/src/view/IniciarSesionForm.java
index 94b7c52..36338a5 100644
--- a/src/view/IniciarSesionForm.java
+++ b/src/view/IniciarSesionForm.java
@@ -14,110 +14,114 @@ import domain.Usuario;
 
 public class IniciarSesionForm extends JFrame implements ActionListener {
 
-	// -----------------------------------------------------------------
-	// Constantes
-	// -----------------------------------------------------------------
-
-	private static final String INICIAR_SESION = "iniciarsesion";
-	private static final String CANCELAR = "cancelarsesion";
-
-	// -----------------------------------------------------------------
-	// Atributos
-	// -----------------------------------------------------------------
-
-	private Usuario usuario;
-
-	// -----------------------------------------------------------------
-	// Atributos de la Interfaz
-	// -----------------------------------------------------------------
-
-	private JTextField txtUsuario;
-	private JPasswordField txtClave;
-	private JLabel lblUsuario;
-	private JLabel lblClave;
-	private JLabel lblTitulo;
-	private JLabel lblEspacio;
-	private JLabel lblEspacio2;
-	private JButton btnIniciarSesion;
-	private JButton btnCancelar;
-
-	// -----------------------------------------------------------------
-	// Constructores
-	// -----------------------------------------------------------------
-
-	/**
-	 * Construye el panel e inicializa sus componentes
-	 */
-	public IniciarSesionForm() {
-		super("Inicar Sesion");
-		setSize(400, 150);
-		setLayout(new GridBagLayout());
-		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-
-		lblUsuario = new JLabel("Nombre: ");
-		GridBagConstraints gbc;
-		gbc = new GridBagConstraints();
-		gbc.gridx = 0;
-		gbc.gridy = 0;
-		gbc.fill = GridBagConstraints.BOTH;
-		add(lblUsuario, gbc);
-
-		txtUsuario = new JTextField("", 12);
-		gbc.gridx = 1;
-		add(txtUsuario, gbc);
-
-		lblClave = new JLabel("Clave: ");
-		gbc.gridx = 0;
-		gbc.gridy = 2;
-		add(lblClave, gbc);
-
-		txtClave = new JPasswordField("", 12);
-		gbc.gridx = 1;
-		add(txtClave, gbc);		
-		
-		lblEspacio = new JLabel("      ");
-		gbc.gridx = 3;
-		gbc.gridy = 0;
-		add(lblEspacio, gbc);
-		
-		lblEspacio2 = new JLabel("      ");
-		gbc.gridx = 3;
-		gbc.gridy = 2;
-		add(lblEspacio2, gbc);
-		
-		btnIniciarSesion = new JButton("Iniciar ");
-		gbc.gridx = 4;
-		gbc.gridy = 0;
-		btnIniciarSesion.setActionCommand(INICIAR_SESION);
-		btnIniciarSesion.addActionListener(this);
-		add(btnIniciarSesion, gbc);
-		
-		btnCancelar = new JButton("Cancelar ");
-		gbc.gridx = 4;
-		gbc.gridy = 2;
-		btnCancelar.setActionCommand(CANCELAR);
-		btnCancelar.addActionListener(this);
-		add(btnCancelar, gbc);
-		
-		setResizable(false);
-		setLocationRelativeTo(null);
-	}
-	
-	public void actionPerformed(ActionEvent evento) {
-		
-		if (evento.getActionCommand() == INICIAR_SESION) {
-			try {	
-				ControladorSesion controlador = new ControladorSesion();
-				controlador.iniciarSesion(txtUsuario.getText(), new String(txtClave.getPassword()));
-				
-				
-			} catch (Exception e) {
-				e.printStackTrace();
-			}
-		}
-		if (evento.getActionCommand()== CANCELAR) {
-			System.exit(0);
-		}
-
-	}
+    // -----------------------------------------------------------------
+    // Constantes
+    // -----------------------------------------------------------------
+
+    private static final String INICIAR_SESION = "iniciarsesion";
+    private static final String CANCELAR = "cancelarsesion";
+
+    // -----------------------------------------------------------------
+    // Atributos
+    // -----------------------------------------------------------------
+
+    private Usuario usuario;
+
+    // -----------------------------------------------------------------
+    // Atributos de la Interfaz
+    // -----------------------------------------------------------------
+
+    private JTextField txtUsuario;
+    private JPasswordField txtClave;
+    private JLabel lblUsuario;
+    private JLabel lblClave;
+    private JLabel lblTitulo;
+    private JLabel lblEspacio;
+    private JLabel lblEspacio2;
+    private JButton btnIniciarSesion;
+    private JButton btnCancelar;
+
+    // -----------------------------------------------------------------
+    // Constructores
+    // -----------------------------------------------------------------
+
+    /**
+     * Construye el panel e inicializa sus componentes
+     */
+    public IniciarSesionForm() {
+        super("Inicar Sesion");
+        setSize(400, 150);
+        setLayout(new GridBagLayout());
+        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+
+        lblUsuario = new JLabel("Nombre: ");
+        GridBagConstraints gbc;
+        gbc = new GridBagConstraints();
+        gbc.gridx = 0;
+        gbc.gridy = 0;
+        gbc.fill = GridBagConstraints.BOTH;
+        add(lblUsuario, gbc);
+
+        txtUsuario = new JTextField("", 12);
+        gbc.gridx = 1;
+        add(txtUsuario, gbc);
+
+        lblClave = new JLabel("Clave: ");
+        gbc.gridx = 0;
+        gbc.gridy = 2;
+        add(lblClave, gbc);
+
+        txtClave = new JPasswordField("", 12);
+        gbc.gridx = 1;
+        add(txtClave, gbc);		
+
+        lblEspacio = new JLabel("      ");
+        gbc.gridx = 3;
+        gbc.gridy = 0;
+        add(lblEspacio, gbc);
+
+        lblEspacio2 = new JLabel("      ");
+        gbc.gridx = 3;
+        gbc.gridy = 2;
+        add(lblEspacio2, gbc);
+
+        btnIniciarSesion = new JButton("Iniciar ");
+        gbc.gridx = 4;
+        gbc.gridy = 0;
+        btnIniciarSesion.setActionCommand(INICIAR_SESION);
+        btnIniciarSesion.addActionListener(this);
+        add(btnIniciarSesion, gbc);
+
+        btnCancelar = new JButton("Cancelar ");
+        gbc.gridx = 4;
+        gbc.gridy = 2;
+        btnCancelar.setActionCommand(CANCELAR);
+        btnCancelar.addActionListener(this);
+        add(btnCancelar, gbc);
+
+        setResizable(false);
+        setLocationRelativeTo(null);
+    }
+
+    public void actionPerformed(ActionEvent evento) {
+
+        if (evento.getActionCommand() == INICIAR_SESION) {
+            try {	
+                ControladorSesion controlador = new ControladorSesion();
+                controlador.iniciarSesion(txtUsuario.getText(), new String(txtClave.getPassword()));
+
+                if(ControladorSesion.usuarioActual == null){
+                    JOptionPane.showMessageDialog(null, "Yupi Clave o Password incorrecto,",
+                            "Error de acceso", JOptionPane.ERROR_MESSAGE);
+                }
+
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+        if (evento.getActionCommand()== CANCELAR) {
+            System.exit(0);
+        }
+
+    }
 }
